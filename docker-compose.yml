services:
  flask_app:
    container_name: flask_app
    image: joshhellstrom/flask_live_app:1.0.0
    build: ./backend
    command: flask run --host=0.0.0.0 --port=4000
    ports:
      - "4000:4000"
    environment:
      # DB_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_db:5432/${POSTGRES_DB}
      DB_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}
    # env_file:
    #   - .env
    volumes:
      - .:/app/backend
    depends_on:
      - db

  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /docker-entrypoint-initdb.d/init-seed.sh
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5

  react_frontend:
    container_name: react_frontend
    build: ./frontend
    volumes:
      - ./frontend:/app
      # - /app/node_modules
    ports:
      - 5001:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_SERVICE_URL=${REACT_APP_BACKEND_SERVICE_URL}
    depends_on:
      - flask_app

volumes:
  pgdata: {}
